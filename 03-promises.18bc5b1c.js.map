{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAaC,SAASC,cAAe,kBACrCC,EAAYF,SAASC,cAAe,iBACpCE,EAAcH,SAASC,cAAe,mBAC1BD,SAASC,cAAe,UAmBhCG,iBAAkB,SAAQ,W,kBAKhCC,YAAW,WAtBf,IAAuBC,EAAUC,EACzBC,GADeF,EAuBHG,EAvBaF,EAuBVL,EAAUQ,MAtBzBF,EAAgBG,KAAKC,SAAW,GACtCL,GAASR,EAAWW,MAAQJ,EAAWC,EACvCD,GAAY,EACL,IAAIO,SAAQ,SAACC,EAASC,GAEvBP,EACFM,EAAQ,CAAER,WAAUC,UAGpBQ,EAAO,CAAET,WAAUC,S,KAchBS,MAAK,SAAAC,G,IAAGX,EAAQW,EAARX,SAAUC,EAAKU,EAALV,MAGjBW,EAAArB,GAASsB,OAAOC,QACd,uBAAwCC,OAAff,EAAS,QAAYe,OAANd,EAAM,MAC5C,CACAe,SAAS,G,IAKdC,OAAM,SAAAN,G,IAAGX,EAAQW,EAARX,SAAUC,EAAKU,EAALV,MAGlBW,EAAArB,GAASsB,OAAOK,QACd,sBAAuCH,OAAff,EAAS,QAAYe,OAANd,EAAM,MAC3C,CACAe,SAAS,G,OAKfvB,EAAWW,MAAQD,EAAIP,EAAUQ,M,EA5BvCe,MAAMC,iBAGN,IAAK,IAAIC,EAAI,EAAGA,EAAIxB,EAAYO,MAAOiB,GAAK,EAACC,EAAAD,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst delayInput = document.querySelector(`[name=\"delay\"]`);\nconst stepInput = document.querySelector(`[name=\"step\"]`);\nconst amountInput = document.querySelector(`[name=\"amount\"]`);\nconst submitBtn = document.querySelector(`button`);\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  delay = +delayInput.value + position * delay;\n  position += 1;\n  return new Promise((resolve, reject) => {\n    // setTimeout(() => {\n    if (shouldResolve) {\n      resolve({ position, delay });\n      // Fulfill\n    } else {\n      reject({ position, delay });\n      // Reject\n    }\n    // }, delayInput.value);\n  });\n}\n\nsubmitBtn.addEventListener(`click`, () => {\n  event.preventDefault();\n  // let startSec = new Date();\n  // console.log(startSec.getSeconds());\n  for (let i = 0; i < amountInput.value; i += 1) {\n    setTimeout(() => {\n      createPromise(i, stepInput.value)\n        .then(({ position, delay }) => {\n          // let currentSec = new Date();\n          // console.log(currentSec.getSeconds());\n          Notiflix.Notify.success(\n            `✅ Fulfilled promise ${position} in ${delay}ms`,\n            {\n              useIcon: false,\n            }\n          );\n          // console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        })\n        .catch(({ position, delay }) => {\n          // let currentSec = new Date();\n          // console.log(currentSec.getSeconds());\n          Notiflix.Notify.failure(\n            `❌ Rejected promise ${position} in ${delay}ms`,\n            {\n              useIcon: false,\n            }\n          );\n          // console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n        });\n    }, +delayInput.value + i * stepInput.value);\n  }\n});\n\n//   return new Promise((resolve, reject) => {\n//     if (shouldResolve) {\n//       resolve({ position, delay });\n//       // Fulfill\n//     } else {\n//       reject({ position, delay });\n//       // Reject\n//     }\n//   });\n// }\n\n// submitBtn.addEventListener(`click`, () => {\n//   event.preventDefault();\n\n//   for (let i = 0; i < amount.value; i += 1) {\n//     setTimeout(() => {\n//       console.log(+delay.value + i * step.value);\n//       let stepTime = +delay.value + i * step.value;\n//       createPromise(delay.value, step.value)\n//         .then(({ position, delay }) =>\n//           console.log(`✅ Fulfilled promise ${i + 1} in ${stepTime}ms`)\n//         )\n//         .catch(({ position, delay }) =>\n//           console.log(`❌ Rejected promise ${i + 1} in ${stepTime}ms`)\n//         );\n//     }, +delay.value + i * step.value);\n//   }\n// });\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$delayInput","document","querySelector","$ce04d3a99e08e73b$var$stepInput","$ce04d3a99e08e73b$var$amountInput","addEventListener","setTimeout","position","delay","shouldResolve","i","value","Math","random","Promise","resolve","reject","then","param","$parcel$interopDefault","Notify","success","concat","useIcon","catch","failure","event","preventDefault","i1","_loop"],"version":3,"file":"03-promises.18bc5b1c.js.map"}